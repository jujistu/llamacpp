name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: llamacpp-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

  deploy-to-kind:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create kind config file
      run: |
        cat > kind-config.yaml <<EOF
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        nodes:
        - role: control-plane
          extraPortMappings:
          - containerPort: 30083
            hostPort: 8084
          - containerPort: 30090
            hostPort: 9090
          - containerPort: 30030
            hostPort: 3001
        EOF

    - name: Verify config file
      run: |
        echo "Generated kind config:"
        cat kind-config.yaml

    - name: Create kind cluster
      uses: helm/kind-action@v1.5.0
      with:
        cluster_name: llama-cluster
        config: kind-config.yaml
        version: v0.17.0
        wait: 60s
        verbosity: 0
        kubectl_version: v1.23.12

    - name: Deploy application
      run: |
          # Update image tag in deployment
          sed -i "s|IMAGE_TAG|${{ github.sha }}|g" kubernetes/deployment.yaml
          sed -i "s|DOCKER_HUB_USERNAME|${{ secrets.DOCKER_HUB_USERNAME }}|g" kubernetes/deployment.yaml
          
          # Apply Kubernetes manifests
          kubectl apply -f kubernetes/namespace.yaml
          kubectl apply -f kubernetes/configmap.yaml
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          
          # Wait for deployment with better timeout
          echo "Waiting for deployment to be ready..."
          kubectl wait --for=condition=available --timeout=600s \
            deployment/llamacpp -n llama-app || {
            echo "Deployment failed, checking status..."
            kubectl get pods -n llama-app
            kubectl describe pods -n llama-app
            kubectl logs -n llama-app -l app=llamacpp --tail=100
            exit 1
          }
          
          echo "Deployment successful!"
          kubectl get pods -n llama-app
    - name: Deploy monitoring stack
      run: |
        bash scripts/setup-monitoring.sh