apiVersion: apps/v1
kind: Deployment
metadata:
  name: llamacpp
  namespace: llama-app
  labels:
    app: llamacpp
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: llamacpp
  template:
    metadata:
      labels:
        app: llamacpp
    spec:
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      
      initContainers:
      - name: model-downloader
        image: curlimages/curl:latest
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        command: ['sh', '-c']
        args:
          - |
            set -e
            MODEL_FILE="/models/model.gguf"
            MODEL_URL="https://huggingface.co/TheBloke/Llama-2-7B-GGUF/resolve/main/llama-2-7b.Q4_K_M.gguf"
            
            if [ -f "$MODEL_FILE" ]; then
              echo "Model already exists at $MODEL_FILE ($(ls -lh "$MODEL_FILE" | awk '{print $5}'))"
              exit 0
            fi
            
            echo "Model not found. Downloading from HuggingFace..."
            echo "This may take several minutes for a ~4GB file..."
            
            curl -L --fail --show-error --progress-bar \
                 --connect-timeout 30 \
                 --max-time 1200 \
                 -C - \
                 -o "$MODEL_FILE.tmp" \
                 "$MODEL_URL"
            
            mv "$MODEL_FILE.tmp" "$MODEL_FILE"
            echo "Download complete! Final size: $(ls -lh "$MODEL_FILE" | awk '{print $5}')"
            
            if [ ! -s "$MODEL_FILE" ]; then
              echo "ERROR: Downloaded file is empty!"
              exit 1
            fi
        volumeMounts:
        - name: model-storage
          mountPath: /models
      
      containers:
      - name: llamacpp-server
        image: DOCKER_HUB_USERNAME/llamacpp-server:IMAGE_TAG
        imagePullPolicy: IfNotPresent
        
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        
        ports:
        - containerPort: 8084
          name: http
        
        env:
        - name: PORT
          value: "8084"
        - name: HOST
          value: "0.0.0.0"
        
        livenessProbe:
          tcpSocket:
            port: 8084
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          tcpSocket:
            port: 8084
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        
        startupProbe:
          tcpSocket:
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 60
        
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: model-storage
          mountPath: /models
          readOnly: true
        
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      
      volumes:
      - name: config
        configMap:
          name: llamacpp-config
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-storage
      
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - llamacpp
              topologyKey: kubernetes.io/hostname
